name: lint-format

on: [push, pull_request]

permissions:
  contents: write
  pull-requests: write

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Check for changes in C++ files
        id: check_changes
        run: |
          if git diff --name-only origin/main ${{ github.sha }} | grep -E '\.(cpp|hpp|c|h)$' -q; then
            echo "files_modified=true" >> $GITHUB_ENV
          else
            echo "files_modified=false" >> $GITHUB_ENV
          fi

      - name: Skip linting if no C++ files changed
        if: env.files_modified == 'false'
        run: |
          echo "No C++ file changes, skipping linting."

      - name: Create build directory # needed for linting
        if: env.files_modified == 'true'
        run: |
          rm -rf build
          mkdir -p build
          cd build
          cmake ..

      - name: Run linter
        if: env.files_modified == 'true'
        uses: cpp-linter/cpp-linter-action@v2
        id: linter
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          version: "18"
          style: "file"
          tidy-checks: ""
          no-lgtm: false
          thread-comments: true
          step-summary: true
          tidy-review: true
          format-review: true
          database: "./build/compile_commands.json"

      - name: Report failure
        if: steps.linter.outputs.checks-failed != '0' && env.files_modified == 'true'
        run: exit 1

      - name: Report Success
        if: env.files_modified == 'false'
        run: exit 0
